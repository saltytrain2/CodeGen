class_map
16
App
2
no_initializer
fun
Expr
no_initializer
arg
Expr
Bool
0
Expr
0
IO
0
Int
0
Lambda
2
no_initializer
arg
Variable
no_initializer
body
Expr
LambdaList
0
LambdaListNE
4
no_initializer
lam
Lambda
no_initializer
num
Int
no_initializer
env
VarList
no_initializer
rest
LambdaList
LambdaListRef
2
initializer
nextNum
Int
77
Int
integer
0
no_initializer
l
LambdaList
Main
0
Object
0
String
0
Term
0
VarList
0
VarListNE
2
no_initializer
x
Variable
no_initializer
rest
VarList
Variable
1
no_initializer
name
String
implementation_map
16
App
12
abort
0
Object
0
Object
internal
Object.abort
copy
0
Object
0
SELF_TYPE
internal
Object.copy
type_name
0
Object
0
String
internal
Object.type_name
in_int
0
IO
0
Int
internal
IO.in_int
in_string
0
IO
0
String
internal
IO.in_string
out_int
1
x
IO
0
SELF_TYPE
internal
IO.out_int
out_string
1
x
IO
0
SELF_TYPE
internal
IO.out_string
print_self
0
App
287
SELF_TYPE
block
6
288
SELF_TYPE
self_dispatch
288
out_string
1
288
String
string
((
289
Expr
dynamic_dispatch
289
Expr
identifier
289
fun
289
print_self
0
290
SELF_TYPE
self_dispatch
290
out_string
1
290
String
string
)@(
291
Expr
dynamic_dispatch
291
Expr
identifier
291
arg
291
print_self
0
292
SELF_TYPE
self_dispatch
292
out_string
1
292
String
string
))
293
SELF_TYPE
identifier
293
self
beta
0
App
298
Expr
case
298
Expr
identifier
298
fun
2
299
l
299
Lambda
299
Expr
dynamic_dispatch
299
Lambda
identifier
299
l
299
apply
1
299
Expr
identifier
299
arg
300
e
300
Expr
301
App
let
2
let_binding_init
301
new_fun
301
Expr
301
Expr
dynamic_dispatch
301
Expr
identifier
301
fun
301
beta
0
let_binding_init
302
new_app
302
App
302
App
new
302
App
303
App
dynamic_dispatch
303
App
identifier
303
new_app
303
init
2
303
Expr
identifier
303
new_fun
303
Expr
identifier
303
arg
substitute
2
x
e
App
308
App
let
3
let_binding_init
308
new_fun
308
Expr
308
Expr
dynamic_dispatch
308
Expr
identifier
308
fun
308
substitute
2
308
Variable
identifier
308
x
308
Expr
identifier
308
e
let_binding_init
309
new_arg
309
Expr
309
Expr
dynamic_dispatch
309
Expr
identifier
309
arg
309
substitute
2
309
Variable
identifier
309
x
309
Expr
identifier
309
e
let_binding_init
310
new_app
310
App
310
App
new
310
App
311
App
dynamic_dispatch
311
App
identifier
311
new_app
311
init
2
311
Expr
identifier
311
new_fun
311
Expr
identifier
311
new_arg
gen_code
2
env
closures
App
315
SELF_TYPE
block
10
316
SELF_TYPE
self_dispatch
316
out_string
1
316
String
string
(let x : EvalObject <- 
317
Expr
dynamic_dispatch
317
Expr
identifier
317
fun
317
gen_code
2
317
VarList
identifier
317
env
317
LambdaListRef
identifier
317
closures
318
SELF_TYPE
self_dispatch
318
out_string
1
318
String
string
,\n
319
SELF_TYPE
self_dispatch
319
out_string
1
319
String
string
     y : EvalObject <- 
320
Expr
dynamic_dispatch
320
Expr
identifier
320
arg
320
gen_code
2
320
VarList
identifier
320
env
320
LambdaListRef
identifier
320
closures
321
SELF_TYPE
self_dispatch
321
out_string
1
321
String
string
 in\n
322
SELF_TYPE
self_dispatch
322
out_string
1
322
String
string
  case x of\n
323
SELF_TYPE
self_dispatch
323
out_string
1
323
String
string
    c : Closure => c.apply(y);\n
324
SELF_TYPE
self_dispatch
324
out_string
1
324
String
string
    o : Object => { abort(); new EvalObject; };\n
325
SELF_TYPE
self_dispatch
325
out_string
1
325
String
string
  esac)
init
2
f
a
App
279
SELF_TYPE
block
3
280
Expr
assign
280
fun
280
Expr
identifier
280
f
281
Expr
assign
281
arg
281
Expr
identifier
281
a
282
SELF_TYPE
identifier
282
self
Bool
3
abort
0
Object
0
Object
internal
Object.abort
copy
0
Object
0
SELF_TYPE
internal
Object.copy
type_name
0
Object
0
String
internal
Object.type_name
Expr
11
abort
0
Object
0
Object
internal
Object.abort
copy
0
Object
0
SELF_TYPE
internal
Object.copy
type_name
0
Object
0
String
internal
Object.type_name
in_int
0
IO
0
Int
internal
IO.in_int
in_string
0
IO
0
String
internal
IO.in_string
out_int
1
x
IO
0
SELF_TYPE
internal
IO.out_int
out_string
1
x
IO
0
SELF_TYPE
internal
IO.out_string
print_self
0
Expr
115
SELF_TYPE
block
3
116
SELF_TYPE
self_dispatch
116
out_string
1
116
String
string
\nError: Expr is pure virtual; can't print self\n
117
Object
self_dispatch
117
abort
0
118
SELF_TYPE
identifier
118
self
beta
0
Expr
124
SELF_TYPE
block
3
125
SELF_TYPE
self_dispatch
125
out_string
1
125
String
string
\nError: Expr is pure virtual; can't beta-reduce\n
126
Object
self_dispatch
126
abort
0
127
SELF_TYPE
identifier
127
self
substitute
2
x
e
Expr
133
SELF_TYPE
block
3
134
SELF_TYPE
self_dispatch
134
out_string
1
134
String
string
\nError: Expr is pure virtual; can't substitute\n
135
Object
self_dispatch
135
abort
0
136
SELF_TYPE
identifier
136
self
gen_code
2
env
closures
Expr
142
SELF_TYPE
block
3
143
SELF_TYPE
self_dispatch
143
out_string
1
143
String
string
\nError: Expr is pure virtual; can't gen_code\n
144
Object
self_dispatch
144
abort
0
145
SELF_TYPE
identifier
145
self
IO
7
abort
0
Object
0
Object
internal
Object.abort
copy
0
Object
0
SELF_TYPE
internal
Object.copy
type_name
0
Object
0
String
internal
Object.type_name
in_int
0
IO
0
Int
internal
IO.in_int
in_string
0
IO
0
String
internal
IO.in_string
out_int
1
x
IO
0
SELF_TYPE
internal
IO.out_int
out_string
1
x
IO
0
SELF_TYPE
internal
IO.out_string
Int
3
abort
0
Object
0
Object
internal
Object.abort
copy
0
Object
0
SELF_TYPE
internal
Object.copy
type_name
0
Object
0
String
internal
Object.type_name
Lambda
14
abort
0
Object
0
Object
internal
Object.abort
copy
0
Object
0
SELF_TYPE
internal
Object.copy
type_name
0
Object
0
String
internal
Object.type_name
in_int
0
IO
0
Int
internal
IO.in_int
in_string
0
IO
0
String
internal
IO.in_string
out_int
1
x
IO
0
SELF_TYPE
internal
IO.out_int
out_string
1
x
IO
0
SELF_TYPE
internal
IO.out_string
print_self
0
Lambda
214
SELF_TYPE
block
5
215
SELF_TYPE
self_dispatch
215
out_string
1
215
String
string
\\
216
Variable
dynamic_dispatch
216
Variable
identifier
216
arg
216
print_self
0
217
SELF_TYPE
self_dispatch
217
out_string
1
217
String
string
.
218
Expr
dynamic_dispatch
218
Expr
identifier
218
body
218
print_self
0
219
SELF_TYPE
identifier
219
self
beta
0
Lambda
223
SELF_TYPE
identifier
223
self
substitute
2
x
e
Lambda
231
Lambda
if
231
Bool
eq
231
Variable
identifier
231
x
231
Variable
identifier
231
arg
232
SELF_TYPE
identifier
232
self
234
Lambda
let
2
let_binding_init
234
new_body
234
Expr
234
Expr
dynamic_dispatch
234
Expr
identifier
234
body
234
substitute
2
234
Variable
identifier
234
x
234
Expr
identifier
234
e
let_binding_init
235
new_lam
235
Lambda
235
Lambda
new
235
Lambda
236
Lambda
dynamic_dispatch
236
Lambda
identifier
236
new_lam
236
init
2
236
Variable
identifier
236
arg
236
Expr
identifier
236
new_body
gen_code
2
env
closures
Lambda
241
SELF_TYPE
block
5
242
SELF_TYPE
self_dispatch
242
out_string
1
242
String
string
((new Closure
243
SELF_TYPE
self_dispatch
243
out_int
1
243
Int
dynamic_dispatch
243
LambdaListRef
identifier
243
closures
243
add
2
243
VarList
identifier
243
env
243
SELF_TYPE
identifier
243
self
244
SELF_TYPE
self_dispatch
244
out_string
1
244
String
string
).init(
245
SELF_TYPE
if
245
Bool
dynamic_dispatch
245
VarList
identifier
245
env
245
isNil
0
246
SELF_TYPE
self_dispatch
246
out_string
1
246
String
string
new Closure))
248
SELF_TYPE
self_dispatch
248
out_string
1
248
String
string
self))
249
SELF_TYPE
identifier
249
self
init
2
a
b
Lambda
206
SELF_TYPE
block
3
207
Variable
assign
207
arg
207
Variable
identifier
207
a
208
Expr
assign
208
body
208
Expr
identifier
208
b
209
SELF_TYPE
identifier
209
self
apply
1
actual
Lambda
226
Expr
dynamic_dispatch
226
Expr
identifier
226
body
226
substitute
2
226
Variable
identifier
226
arg
226
Expr
identifier
226
actual
gen_closure_code
3
n
env
closures
Lambda
255
SELF_TYPE
block
11
256
SELF_TYPE
self_dispatch
256
out_string
1
256
String
string
class Closure
257
SELF_TYPE
self_dispatch
257
out_int
1
257
Int
identifier
257
n
258
SELF_TYPE
self_dispatch
258
out_string
1
258
String
string
 inherits Closure {\n
259
SELF_TYPE
self_dispatch
259
out_string
1
259
String
string
  apply(y : EvalObject) : EvalObject {\n
260
SELF_TYPE
self_dispatch
260
out_string
1
260
String
string
    { out_string(\"Applying closure 
261
SELF_TYPE
self_dispatch
261
out_int
1
261
Int
identifier
261
n
262
SELF_TYPE
self_dispatch
262
out_string
1
262
String
string
\\n\");\n
263
SELF_TYPE
self_dispatch
263
out_string
1
263
String
string
      x <- y;\n
264
Expr
dynamic_dispatch
264
Expr
identifier
264
body
264
gen_code
2
264
VarList
dynamic_dispatch
264
VarList
identifier
264
env
264
add
1
264
Variable
identifier
264
arg
264
LambdaListRef
identifier
264
closures
265
SELF_TYPE
self_dispatch
265
out_string
1
265
String
string
;}};\n
266
SELF_TYPE
self_dispatch
266
out_string
1
266
String
string
};\n
LambdaList
9
abort
0
Object
0
Object
internal
Object.abort
copy
0
Object
0
SELF_TYPE
internal
Object.copy
type_name
0
Object
0
String
internal
Object.type_name
isNil
0
LambdaList
45
Bool
true
headE
0
LambdaList
46
VarList
block
2
46
Object
self_dispatch
46
abort
0
46
VarList
new
46
VarList
headC
0
LambdaList
47
Lambda
block
2
47
Object
self_dispatch
47
abort
0
47
Lambda
new
47
Lambda
headN
0
LambdaList
48
Int
block
2
48
Object
self_dispatch
48
abort
0
48
Int
integer
0
tail
0
LambdaList
49
LambdaList
block
2
49
Object
self_dispatch
49
abort
0
49
LambdaList
new
49
LambdaList
add
3
e
x
n
LambdaList
51
LambdaListNE
dynamic_dispatch
51
LambdaListNE
new
51
LambdaListNE
51
init
4
51
VarList
identifier
51
e
51
Lambda
identifier
51
x
51
Int
identifier
51
n
51
SELF_TYPE
identifier
51
self
LambdaListNE
10
abort
0
Object
0
Object
internal
Object.abort
copy
0
Object
0
SELF_TYPE
internal
Object.copy
type_name
0
Object
0
String
internal
Object.type_name
isNil
0
LambdaListNE
60
Bool
false
headE
0
LambdaListNE
61
VarList
identifier
61
env
headC
0
LambdaListNE
62
Lambda
identifier
62
lam
headN
0
LambdaListNE
63
Int
identifier
63
num
tail
0
LambdaListNE
64
LambdaList
identifier
64
rest
add
3
e
x
n
LambdaList
51
LambdaListNE
dynamic_dispatch
51
LambdaListNE
new
51
LambdaListNE
51
init
4
51
VarList
identifier
51
e
51
Lambda
identifier
51
x
51
Int
identifier
51
n
51
SELF_TYPE
identifier
51
self
init
4
e
l
n
r
LambdaListNE
66
SELF_TYPE
block
5
67
VarList
assign
67
env
67
VarList
identifier
67
e
68
Lambda
assign
68
lam
68
Lambda
identifier
68
l
69
Int
assign
69
num
69
Int
identifier
69
n
70
LambdaList
assign
70
rest
70
LambdaList
identifier
70
r
71
SELF_TYPE
identifier
71
self
LambdaListRef
10
abort
0
Object
0
Object
internal
Object.abort
copy
0
Object
0
SELF_TYPE
internal
Object.copy
type_name
0
Object
0
String
internal
Object.type_name
isNil
0
LambdaListRef
79
Bool
dynamic_dispatch
79
LambdaList
identifier
79
l
79
isNil
0
headE
0
LambdaListRef
80
VarList
dynamic_dispatch
80
LambdaList
identifier
80
l
80
headE
0
headC
0
LambdaListRef
81
Lambda
dynamic_dispatch
81
LambdaList
identifier
81
l
81
headC
0
headN
0
LambdaListRef
82
Int
dynamic_dispatch
82
LambdaList
identifier
82
l
82
headN
0
reset
0
LambdaListRef
84
SELF_TYPE
block
3
85
Int
assign
85
nextNum
85
Int
integer
0
86
LambdaList
assign
86
l
86
LambdaList
new
86
LambdaList
87
SELF_TYPE
identifier
87
self
add
2
env
c
LambdaListRef
91
Int
block
3
92
LambdaList
assign
92
l
92
LambdaList
dynamic_dispatch
92
LambdaList
identifier
92
l
92
add
3
92
VarList
identifier
92
env
92
Lambda
identifier
92
c
92
Int
identifier
92
nextNum
93
Int
assign
93
nextNum
93
Int
plus
93
Int
identifier
93
nextNum
93
Int
integer
1
94
Int
minus
94
Int
identifier
94
nextNum
94
Int
integer
1
removeHead
0
LambdaListRef
98
SELF_TYPE
block
2
99
LambdaList
assign
99
l
99
LambdaList
dynamic_dispatch
99
LambdaList
identifier
99
l
99
tail
0
100
SELF_TYPE
identifier
100
self
Main
18
abort
0
Object
0
Object
internal
Object.abort
copy
0
Object
0
SELF_TYPE
internal
Object.copy
type_name
0
Object
0
String
internal
Object.type_name
in_int
0
IO
0
Int
internal
IO.in_int
in_string
0
IO
0
String
internal
IO.in_string
out_int
1
x
IO
0
SELF_TYPE
internal
IO.out_int
out_string
1
x
IO
0
SELF_TYPE
internal
IO.out_string
var
1
x
Term
340
Variable
let
1
let_binding_init
340
v
340
Variable
340
Variable
new
340
Variable
341
Variable
dynamic_dispatch
341
Variable
identifier
341
v
341
init
1
341
String
identifier
341
x
lam
2
x
e
Term
345
Lambda
let
1
let_binding_init
345
l
345
Lambda
345
Lambda
new
345
Lambda
346
Lambda
dynamic_dispatch
346
Lambda
identifier
346
l
346
init
2
346
Variable
identifier
346
x
346
Expr
identifier
346
e
app
2
e1
e2
Term
350
App
let
1
let_binding_init
350
a
350
App
350
App
new
350
App
351
App
dynamic_dispatch
351
App
identifier
351
a
351
init
2
351
Expr
identifier
351
e1
351
Expr
identifier
351
e2
i
0
Term
358
Lambda
let
1
let_binding_init
358
x
358
Variable
358
Variable
self_dispatch
358
var
1
358
String
string
x
359
Lambda
self_dispatch
359
lam
2
359
Variable
identifier
359
x
359
Variable
identifier
359
x
k
0
Term
363
Lambda
let
2
let_binding_init
363
x
363
Variable
363
Variable
self_dispatch
363
var
1
363
String
string
x
let_binding_init
364
y
364
Variable
364
Variable
self_dispatch
364
var
1
364
String
string
y
365
Lambda
self_dispatch
365
lam
2
365
Variable
identifier
365
x
365
Lambda
self_dispatch
365
lam
2
365
Variable
identifier
365
y
365
Variable
identifier
365
x
s
0
Term
369
Lambda
let
3
let_binding_init
369
x
369
Variable
369
Variable
self_dispatch
369
var
1
369
String
string
x
let_binding_init
370
y
370
Variable
370
Variable
self_dispatch
370
var
1
370
String
string
y
let_binding_init
371
z
371
Variable
371
Variable
self_dispatch
371
var
1
371
String
string
z
372
Lambda
self_dispatch
372
lam
2
372
Variable
identifier
372
x
372
Lambda
self_dispatch
372
lam
2
372
Variable
identifier
372
y
372
Lambda
self_dispatch
372
lam
2
372
Variable
identifier
372
z
372
App
self_dispatch
372
app
2
372
App
self_dispatch
372
app
2
372
Variable
identifier
372
x
372
Variable
identifier
372
z
372
App
self_dispatch
372
app
2
372
Variable
identifier
372
y
372
Variable
identifier
372
z
beta_reduce
1
e
Main
386
Expr
block
3
387
SELF_TYPE
self_dispatch
387
out_string
1
387
String
string
beta-reduce: 
388
Expr
dynamic_dispatch
388
Expr
identifier
388
e
388
print_self
0
389
Expr
let
2
let_binding_init
389
done
389
Bool
389
Bool
false
let_binding_no_init
390
new_expr
390
Expr
391
Expr
block
3
392
Object
while
392
Bool
not
392
Bool
identifier
392
done
393
Object
block
2
394
Expr
assign
394
new_expr
394
Expr
dynamic_dispatch
394
Expr
identifier
394
e
394
beta
0
395
Object
if
395
Bool
eq
395
Expr
identifier
395
new_expr
395
Expr
identifier
395
e
396
Bool
assign
396
done
396
Bool
true
398
Expr
block
3
399
Expr
assign
399
e
399
Expr
identifier
399
new_expr
400
SELF_TYPE
self_dispatch
400
out_string
1
400
String
string
 =>\n
401
Expr
dynamic_dispatch
401
Expr
identifier
401
e
401
print_self
0
406
SELF_TYPE
self_dispatch
406
out_string
1
406
String
string
\n
407
Expr
identifier
407
e
eval_class
0
Main
413
SELF_TYPE
block
3
414
SELF_TYPE
self_dispatch
414
out_string
1
414
String
string
class EvalObject inherits IO {\n
415
SELF_TYPE
self_dispatch
415
out_string
1
415
String
string
  eval() : EvalObject { { abort(); self; } };\n
416
SELF_TYPE
self_dispatch
416
out_string
1
416
String
string
};\n
closure_class
0
Main
421
SELF_TYPE
block
8
422
SELF_TYPE
self_dispatch
422
out_string
1
422
String
string
class Closure inherits EvalObject {\n
423
SELF_TYPE
self_dispatch
423
out_string
1
423
String
string
  parent : Closure;\n
424
SELF_TYPE
self_dispatch
424
out_string
1
424
String
string
  x : EvalObject;\n
425
SELF_TYPE
self_dispatch
425
out_string
1
425
String
string
  get_parent() : Closure { parent };\n
426
SELF_TYPE
self_dispatch
426
out_string
1
426
String
string
  get_x() : EvalObject { x };\n
427
SELF_TYPE
self_dispatch
427
out_string
1
427
String
string
  init(p : Closure) : Closure {{ parent <- p; self; }};\n
428
SELF_TYPE
self_dispatch
428
out_string
1
428
String
string
  apply(y : EvalObject) : EvalObject { { abort(); self; } };\n
429
SELF_TYPE
self_dispatch
429
out_string
1
429
String
string
};\n
gen_code
1
e
Main
434
SELF_TYPE
let
1
let_binding_init
434
cl
434
LambdaListRef
434
LambdaListRef
dynamic_dispatch
434
LambdaListRef
new
434
LambdaListRef
434
reset
0
435
SELF_TYPE
block
12
436
SELF_TYPE
self_dispatch
436
out_string
1
436
String
string
Generating code for 
437
Expr
dynamic_dispatch
437
Expr
identifier
437
e
437
print_self
0
438
SELF_TYPE
self_dispatch
438
out_string
1
438
String
string
\n------------------cut here------------------\n
439
SELF_TYPE
self_dispatch
439
out_string
1
439
String
string
(*Generated by lam.cl (Jeff Foster, March 2000)*)\n
440
SELF_TYPE
self_dispatch
440
eval_class
0
441
SELF_TYPE
self_dispatch
441
closure_class
0
442
SELF_TYPE
self_dispatch
442
out_string
1
442
String
string
class Main {\n
443
SELF_TYPE
self_dispatch
443
out_string
1
443
String
string
  main() : EvalObject {\n
444
Expr
dynamic_dispatch
444
Expr
identifier
444
e
444
gen_code
2
444
VarList
new
444
VarList
444
LambdaListRef
identifier
444
cl
445
SELF_TYPE
self_dispatch
445
out_string
1
445
String
string
\n};\n};\n
446
Object
while
446
Bool
not
446
Bool
dynamic_dispatch
446
LambdaListRef
identifier
446
cl
446
isNil
0
447
Lambda
let
3
let_binding_init
447
e
447
VarList
447
VarList
dynamic_dispatch
447
LambdaListRef
identifier
447
cl
447
headE
0
let_binding_init
448
c
448
Lambda
448
Lambda
dynamic_dispatch
448
LambdaListRef
identifier
448
cl
448
headC
0
let_binding_init
449
n
449
Int
449
Int
dynamic_dispatch
449
LambdaListRef
identifier
449
cl
449
headN
0
450
Lambda
block
2
451
LambdaListRef
dynamic_dispatch
451
LambdaListRef
identifier
451
cl
451
removeHead
0
452
Lambda
dynamic_dispatch
452
Lambda
identifier
452
c
452
gen_closure_code
3
452
Int
identifier
452
n
452
VarList
identifier
452
e
452
LambdaListRef
identifier
452
cl
455
SELF_TYPE
self_dispatch
455
out_string
1
455
String
string
\n------------------cut here------------------\n
main
0
Main
460
Int
block
13
461
Expr
dynamic_dispatch
461
Expr
self_dispatch
461
i
0
461
print_self
0
462
SELF_TYPE
self_dispatch
462
out_string
1
462
String
string
\n
463
Expr
dynamic_dispatch
463
Expr
self_dispatch
463
k
0
463
print_self
0
464
SELF_TYPE
self_dispatch
464
out_string
1
464
String
string
\n
465
Expr
dynamic_dispatch
465
Expr
self_dispatch
465
s
0
465
print_self
0
466
SELF_TYPE
self_dispatch
466
out_string
1
466
String
string
\n
467
Expr
self_dispatch
467
beta_reduce
1
467
App
self_dispatch
467
app
2
467
App
self_dispatch
467
app
2
467
App
self_dispatch
467
app
2
467
Expr
self_dispatch
467
s
0
467
Expr
self_dispatch
467
k
0
467
Expr
self_dispatch
467
i
0
467
Expr
self_dispatch
467
i
0
468
Expr
self_dispatch
468
beta_reduce
1
468
App
self_dispatch
468
app
2
468
App
self_dispatch
468
app
2
468
Expr
self_dispatch
468
k
0
468
Expr
self_dispatch
468
i
0
468
Expr
self_dispatch
468
i
0
469
SELF_TYPE
self_dispatch
469
gen_code
1
469
App
self_dispatch
469
app
2
469
Expr
self_dispatch
469
i
0
469
Expr
self_dispatch
469
i
0
470
SELF_TYPE
self_dispatch
470
gen_code
1
470
App
self_dispatch
470
app
2
470
App
self_dispatch
470
app
2
470
App
self_dispatch
470
app
2
470
Expr
self_dispatch
470
s
0
470
Expr
self_dispatch
470
k
0
470
Expr
self_dispatch
470
i
0
470
Expr
self_dispatch
470
i
0
471
SELF_TYPE
self_dispatch
471
gen_code
1
471
App
self_dispatch
471
app
2
471
App
self_dispatch
471
app
2
471
App
self_dispatch
471
app
2
471
App
self_dispatch
471
app
2
471
App
self_dispatch
471
app
2
471
App
self_dispatch
471
app
2
471
App
self_dispatch
471
app
2
471
App
self_dispatch
471
app
2
471
Expr
self_dispatch
471
i
0
471
Expr
self_dispatch
471
k
0
471
Expr
self_dispatch
471
s
0
471
Expr
self_dispatch
471
s
0
472
Expr
self_dispatch
472
k
0
472
Expr
self_dispatch
472
s
0
472
Expr
self_dispatch
472
i
0
472
Expr
self_dispatch
472
k
0
472
Expr
self_dispatch
472
i
0
473
SELF_TYPE
self_dispatch
473
gen_code
1
473
App
self_dispatch
473
app
2
473
App
self_dispatch
473
app
2
473
Expr
self_dispatch
473
i
0
473
App
self_dispatch
473
app
2
473
Expr
self_dispatch
473
k
0
473
Expr
self_dispatch
473
s
0
473
App
self_dispatch
473
app
2
473
Expr
self_dispatch
473
k
0
473
App
self_dispatch
473
app
2
473
Expr
self_dispatch
473
s
0
473
Expr
self_dispatch
473
s
0
474
Int
integer
0
Object
3
abort
0
Object
0
Object
internal
Object.abort
copy
0
Object
0
SELF_TYPE
internal
Object.copy
type_name
0
Object
0
String
internal
Object.type_name
String
6
abort
0
Object
0
Object
internal
Object.abort
copy
0
Object
0
SELF_TYPE
internal
Object.copy
type_name
0
Object
0
String
internal
Object.type_name
concat
1
s
String
0
String
internal
String.concat
length
0
String
0
Int
internal
String.length
substr
2
i
l
String
0
String
internal
String.substr
Term
13
abort
0
Object
0
Object
internal
Object.abort
copy
0
Object
0
SELF_TYPE
internal
Object.copy
type_name
0
Object
0
String
internal
Object.type_name
in_int
0
IO
0
Int
internal
IO.in_int
in_string
0
IO
0
String
internal
IO.in_string
out_int
1
x
IO
0
SELF_TYPE
internal
IO.out_int
out_string
1
x
IO
0
SELF_TYPE
internal
IO.out_string
var
1
x
Term
340
Variable
let
1
let_binding_init
340
v
340
Variable
340
Variable
new
340
Variable
341
Variable
dynamic_dispatch
341
Variable
identifier
341
v
341
init
1
341
String
identifier
341
x
lam
2
x
e
Term
345
Lambda
let
1
let_binding_init
345
l
345
Lambda
345
Lambda
new
345
Lambda
346
Lambda
dynamic_dispatch
346
Lambda
identifier
346
l
346
init
2
346
Variable
identifier
346
x
346
Expr
identifier
346
e
app
2
e1
e2
Term
350
App
let
1
let_binding_init
350
a
350
App
350
App
new
350
App
351
App
dynamic_dispatch
351
App
identifier
351
a
351
init
2
351
Expr
identifier
351
e1
351
Expr
identifier
351
e2
i
0
Term
358
Lambda
let
1
let_binding_init
358
x
358
Variable
358
Variable
self_dispatch
358
var
1
358
String
string
x
359
Lambda
self_dispatch
359
lam
2
359
Variable
identifier
359
x
359
Variable
identifier
359
x
k
0
Term
363
Lambda
let
2
let_binding_init
363
x
363
Variable
363
Variable
self_dispatch
363
var
1
363
String
string
x
let_binding_init
364
y
364
Variable
364
Variable
self_dispatch
364
var
1
364
String
string
y
365
Lambda
self_dispatch
365
lam
2
365
Variable
identifier
365
x
365
Lambda
self_dispatch
365
lam
2
365
Variable
identifier
365
y
365
Variable
identifier
365
x
s
0
Term
369
Lambda
let
3
let_binding_init
369
x
369
Variable
369
Variable
self_dispatch
369
var
1
369
String
string
x
let_binding_init
370
y
370
Variable
370
Variable
self_dispatch
370
var
1
370
String
string
y
let_binding_init
371
z
371
Variable
371
Variable
self_dispatch
371
var
1
371
String
string
z
372
Lambda
self_dispatch
372
lam
2
372
Variable
identifier
372
x
372
Lambda
self_dispatch
372
lam
2
372
Variable
identifier
372
y
372
Lambda
self_dispatch
372
lam
2
372
Variable
identifier
372
z
372
App
self_dispatch
372
app
2
372
App
self_dispatch
372
app
2
372
Variable
identifier
372
x
372
Variable
identifier
372
z
372
App
self_dispatch
372
app
2
372
Variable
identifier
372
y
372
Variable
identifier
372
z
VarList
12
abort
0
Object
0
Object
internal
Object.abort
copy
0
Object
0
SELF_TYPE
internal
Object.copy
type_name
0
Object
0
String
internal
Object.type_name
in_int
0
IO
0
Int
internal
IO.in_int
in_string
0
IO
0
String
internal
IO.in_string
out_int
1
x
IO
0
SELF_TYPE
internal
IO.out_int
out_string
1
x
IO
0
SELF_TYPE
internal
IO.out_string
isNil
0
VarList
22
Bool
true
head
0
VarList
23
Variable
block
2
23
Object
self_dispatch
23
abort
0
23
Variable
new
23
Variable
tail
0
VarList
24
VarList
block
2
24
Object
self_dispatch
24
abort
0
24
VarList
new
24
VarList
add
1
x
VarList
25
VarListNE
dynamic_dispatch
25
VarListNE
new
25
VarListNE
25
init
2
25
Variable
identifier
25
x
25
SELF_TYPE
identifier
25
self
print
0
VarList
26
SELF_TYPE
self_dispatch
26
out_string
1
26
String
string
\n
VarListNE
13
abort
0
Object
0
Object
internal
Object.abort
copy
0
Object
0
SELF_TYPE
internal
Object.copy
type_name
0
Object
0
String
internal
Object.type_name
in_int
0
IO
0
Int
internal
IO.in_int
in_string
0
IO
0
String
internal
IO.in_string
out_int
1
x
IO
0
SELF_TYPE
internal
IO.out_int
out_string
1
x
IO
0
SELF_TYPE
internal
IO.out_string
isNil
0
VarListNE
32
Bool
false
head
0
VarListNE
33
Variable
identifier
33
x
tail
0
VarListNE
34
VarList
identifier
34
rest
add
1
x
VarList
25
VarListNE
dynamic_dispatch
25
VarListNE
new
25
VarListNE
25
init
2
25
Variable
identifier
25
x
25
SELF_TYPE
identifier
25
self
print
0
VarListNE
36
SELF_TYPE
block
4
36
Variable
dynamic_dispatch
36
Variable
identifier
36
x
36
print_self
0
36
SELF_TYPE
self_dispatch
36
out_string
1
36
String
string
 
37
VarList
dynamic_dispatch
37
VarList
identifier
37
rest
37
print
0
37
SELF_TYPE
identifier
37
self
init
2
y
r
VarListNE
35
SELF_TYPE
block
3
35
Variable
assign
35
x
35
Variable
identifier
35
y
35
VarList
assign
35
rest
35
VarList
identifier
35
r
35
SELF_TYPE
identifier
35
self
Variable
12
abort
0
Object
0
Object
internal
Object.abort
copy
0
Object
0
SELF_TYPE
internal
Object.copy
type_name
0
Object
0
String
internal
Object.type_name
in_int
0
IO
0
Int
internal
IO.in_int
in_string
0
IO
0
String
internal
IO.in_string
out_int
1
x
IO
0
SELF_TYPE
internal
IO.out_int
out_string
1
x
IO
0
SELF_TYPE
internal
IO.out_string
print_self
0
Variable
164
SELF_TYPE
self_dispatch
164
out_string
1
164
String
identifier
164
name
beta
0
Variable
167
SELF_TYPE
identifier
167
self
substitute
2
x
e
Variable
170
Expr
if
170
Bool
eq
170
Variable
identifier
170
x
170
SELF_TYPE
identifier
170
self
170
Expr
identifier
170
e
170
SELF_TYPE
identifier
170
self
gen_code
2
env
closures
Variable
174
SELF_TYPE
let
1
let_binding_init
174
cur_env
174
VarList
174
VarList
identifier
174
env
175
SELF_TYPE
block
2
175
Object
while
175
Bool
if
175
Bool
dynamic_dispatch
175
VarList
identifier
175
cur_env
175
isNil
0
176
Bool
false
178
Bool
not
178
Bool
eq
178
Variable
dynamic_dispatch
178
VarList
identifier
178
cur_env
178
head
0
178
SELF_TYPE
identifier
178
self
180
VarList
block
2
180
SELF_TYPE
self_dispatch
180
out_string
1
180
String
string
get_parent().
181
VarList
assign
181
cur_env
181
VarList
dynamic_dispatch
181
VarList
identifier
181
cur_env
181
tail
0
184
SELF_TYPE
if
184
Bool
dynamic_dispatch
184
VarList
identifier
184
cur_env
184
isNil
0
185
SELF_TYPE
block
5
185
SELF_TYPE
self_dispatch
185
out_string
1
185
String
string
Error:  free occurrence of 
186
SELF_TYPE
self_dispatch
186
print_self
0
187
SELF_TYPE
self_dispatch
187
out_string
1
187
String
string
\n
188
Object
self_dispatch
188
abort
0
189
SELF_TYPE
identifier
189
self
192
SELF_TYPE
self_dispatch
192
out_string
1
192
String
string
get_x()
init
1
n
Variable
157
SELF_TYPE
block
2
158
String
assign
158
name
158
String
identifier
158
n
159
SELF_TYPE
identifier
159
self
parent_map
15
App
Expr
Bool
Object
Expr
IO
IO
Object
Int
Object
Lambda
Expr
LambdaList
Object
LambdaListNE
LambdaList
LambdaListRef
Object
Main
Term
String
Object
Term
IO
VarList
IO
VarListNE
VarList
Variable
Expr
11
21
VarList
inherits
21
IO
5
method
22
isNil
0
22
Bool
22
Bool
true
method
23
head
0
23
Variable
23
Variable
block
2
23
Object
self_dispatch
23
abort
0
23
Variable
new
23
Variable
method
24
tail
0
24
VarList
24
VarList
block
2
24
Object
self_dispatch
24
abort
0
24
VarList
new
24
VarList
method
25
add
1
25
x
25
Variable
25
VarList
25
VarListNE
dynamic_dispatch
25
VarListNE
new
25
VarListNE
25
init
2
25
Variable
identifier
25
x
25
SELF_TYPE
identifier
25
self
method
26
print
0
26
SELF_TYPE
26
SELF_TYPE
self_dispatch
26
out_string
1
26
String
string
\n
29
VarListNE
inherits
29
VarList
7
attribute_no_init
30
x
30
Variable
attribute_no_init
31
rest
31
VarList
method
32
isNil
0
32
Bool
32
Bool
false
method
33
head
0
33
Variable
33
Variable
identifier
33
x
method
34
tail
0
34
VarList
34
VarList
identifier
34
rest
method
35
init
2
35
y
35
Variable
35
r
35
VarList
35
VarListNE
35
SELF_TYPE
block
3
35
Variable
assign
35
x
35
Variable
identifier
35
y
35
VarList
assign
35
rest
35
VarList
identifier
35
r
35
SELF_TYPE
identifier
35
self
method
36
print
0
36
SELF_TYPE
36
SELF_TYPE
block
4
36
Variable
dynamic_dispatch
36
Variable
identifier
36
x
36
print_self
0
36
SELF_TYPE
self_dispatch
36
out_string
1
36
String
string
 
37
VarList
dynamic_dispatch
37
VarList
identifier
37
rest
37
print
0
37
SELF_TYPE
identifier
37
self
44
LambdaList
no_inherits
6
method
45
isNil
0
45
Bool
45
Bool
true
method
46
headE
0
46
VarList
46
VarList
block
2
46
Object
self_dispatch
46
abort
0
46
VarList
new
46
VarList
method
47
headC
0
47
Lambda
47
Lambda
block
2
47
Object
self_dispatch
47
abort
0
47
Lambda
new
47
Lambda
method
48
headN
0
48
Int
48
Int
block
2
48
Object
self_dispatch
48
abort
0
48
Int
integer
0
method
49
tail
0
49
LambdaList
49
LambdaList
block
2
49
Object
self_dispatch
49
abort
0
49
LambdaList
new
49
LambdaList
method
50
add
3
50
e
50
VarList
50
x
50
Lambda
50
n
50
Int
50
LambdaList
51
LambdaListNE
dynamic_dispatch
51
LambdaListNE
new
51
LambdaListNE
51
init
4
51
VarList
identifier
51
e
51
Lambda
identifier
51
x
51
Int
identifier
51
n
51
SELF_TYPE
identifier
51
self
55
LambdaListNE
inherits
55
LambdaList
10
attribute_no_init
56
lam
56
Lambda
attribute_no_init
57
num
57
Int
attribute_no_init
58
env
58
VarList
attribute_no_init
59
rest
59
LambdaList
method
60
isNil
0
60
Bool
60
Bool
false
method
61
headE
0
61
VarList
61
VarList
identifier
61
env
method
62
headC
0
62
Lambda
62
Lambda
identifier
62
lam
method
63
headN
0
63
Int
63
Int
identifier
63
num
method
64
tail
0
64
LambdaList
64
LambdaList
identifier
64
rest
method
65
init
4
65
e
65
VarList
65
l
65
Lambda
65
n
65
Int
65
r
65
LambdaList
65
LambdaListNE
66
SELF_TYPE
block
5
67
VarList
assign
67
env
67
VarList
identifier
67
e
68
Lambda
assign
68
lam
68
Lambda
identifier
68
l
69
Int
assign
69
num
69
Int
identifier
69
n
70
LambdaList
assign
70
rest
70
LambdaList
identifier
70
r
71
SELF_TYPE
identifier
71
self
76
LambdaListRef
no_inherits
9
attribute_init
77
nextNum
77
Int
77
Int
integer
0
attribute_no_init
78
l
78
LambdaList
method
79
isNil
0
79
Bool
79
Bool
dynamic_dispatch
79
LambdaList
identifier
79
l
79
isNil
0
method
80
headE
0
80
VarList
80
VarList
dynamic_dispatch
80
LambdaList
identifier
80
l
80
headE
0
method
81
headC
0
81
Lambda
81
Lambda
dynamic_dispatch
81
LambdaList
identifier
81
l
81
headC
0
method
82
headN
0
82
Int
82
Int
dynamic_dispatch
82
LambdaList
identifier
82
l
82
headN
0
method
83
reset
0
83
SELF_TYPE
84
SELF_TYPE
block
3
85
Int
assign
85
nextNum
85
Int
integer
0
86
LambdaList
assign
86
l
86
LambdaList
new
86
LambdaList
87
SELF_TYPE
identifier
87
self
method
90
add
2
90
env
90
VarList
90
c
90
Lambda
90
Int
91
Int
block
3
92
LambdaList
assign
92
l
92
LambdaList
dynamic_dispatch
92
LambdaList
identifier
92
l
92
add
3
92
VarList
identifier
92
env
92
Lambda
identifier
92
c
92
Int
identifier
92
nextNum
93
Int
assign
93
nextNum
93
Int
plus
93
Int
identifier
93
nextNum
93
Int
integer
1
94
Int
minus
94
Int
identifier
94
nextNum
94
Int
integer
1
method
97
removeHead
0
97
SELF_TYPE
98
SELF_TYPE
block
2
99
LambdaList
assign
99
l
99
LambdaList
dynamic_dispatch
99
LambdaList
identifier
99
l
99
tail
0
100
SELF_TYPE
identifier
100
self
111
Expr
inherits
111
IO
4
method
114
print_self
0
114
SELF_TYPE
115
SELF_TYPE
block
3
116
SELF_TYPE
self_dispatch
116
out_string
1
116
String
string
\nError: Expr is pure virtual; can't print self\n
117
Object
self_dispatch
117
abort
0
118
SELF_TYPE
identifier
118
self
method
123
beta
0
123
Expr
124
SELF_TYPE
block
3
125
SELF_TYPE
self_dispatch
125
out_string
1
125
String
string
\nError: Expr is pure virtual; can't beta-reduce\n
126
Object
self_dispatch
126
abort
0
127
SELF_TYPE
identifier
127
self
method
132
substitute
2
132
x
132
Variable
132
e
132
Expr
132
Expr
133
SELF_TYPE
block
3
134
SELF_TYPE
self_dispatch
134
out_string
1
134
String
string
\nError: Expr is pure virtual; can't substitute\n
135
Object
self_dispatch
135
abort
0
136
SELF_TYPE
identifier
136
self
method
141
gen_code
2
141
env
141
VarList
141
closures
141
LambdaListRef
141
SELF_TYPE
142
SELF_TYPE
block
3
143
SELF_TYPE
self_dispatch
143
out_string
1
143
String
string
\nError: Expr is pure virtual; can't gen_code\n
144
Object
self_dispatch
144
abort
0
145
SELF_TYPE
identifier
145
self
153
Variable
inherits
153
Expr
6
attribute_no_init
154
name
154
String
method
156
init
1
156
n
156
String
156
Variable
157
SELF_TYPE
block
2
158
String
assign
158
name
158
String
identifier
158
n
159
SELF_TYPE
identifier
159
self
method
163
print_self
0
163
SELF_TYPE
164
SELF_TYPE
self_dispatch
164
out_string
1
164
String
identifier
164
name
method
167
beta
0
167
Expr
167
SELF_TYPE
identifier
167
self
method
169
substitute
2
169
x
169
Variable
169
e
169
Expr
169
Expr
170
Expr
if
170
Bool
eq
170
Variable
identifier
170
x
170
SELF_TYPE
identifier
170
self
170
Expr
identifier
170
e
170
SELF_TYPE
identifier
170
self
method
173
gen_code
2
173
env
173
VarList
173
closures
173
LambdaListRef
173
SELF_TYPE
174
SELF_TYPE
let
1
let_binding_init
174
cur_env
174
VarList
174
VarList
identifier
174
env
175
SELF_TYPE
block
2
175
Object
while
175
Bool
if
175
Bool
dynamic_dispatch
175
VarList
identifier
175
cur_env
175
isNil
0
176
Bool
false
178
Bool
not
178
Bool
eq
178
Variable
dynamic_dispatch
178
VarList
identifier
178
cur_env
178
head
0
178
SELF_TYPE
identifier
178
self
180
VarList
block
2
180
SELF_TYPE
self_dispatch
180
out_string
1
180
String
string
get_parent().
181
VarList
assign
181
cur_env
181
VarList
dynamic_dispatch
181
VarList
identifier
181
cur_env
181
tail
0
184
SELF_TYPE
if
184
Bool
dynamic_dispatch
184
VarList
identifier
184
cur_env
184
isNil
0
185
SELF_TYPE
block
5
185
SELF_TYPE
self_dispatch
185
out_string
1
185
String
string
Error:  free occurrence of 
186
SELF_TYPE
self_dispatch
186
print_self
0
187
SELF_TYPE
self_dispatch
187
out_string
1
187
String
string
\n
188
Object
self_dispatch
188
abort
0
189
SELF_TYPE
identifier
189
self
192
SELF_TYPE
self_dispatch
192
out_string
1
192
String
string
get_x()
201
Lambda
inherits
201
Expr
9
attribute_no_init
202
arg
202
Variable
attribute_no_init
203
body
203
Expr
method
205
init
2
205
a
205
Variable
205
b
205
Expr
205
Lambda
206
SELF_TYPE
block
3
207
Variable
assign
207
arg
207
Variable
identifier
207
a
208
Expr
assign
208
body
208
Expr
identifier
208
b
209
SELF_TYPE
identifier
209
self
method
213
print_self
0
213
SELF_TYPE
214
SELF_TYPE
block
5
215
SELF_TYPE
self_dispatch
215
out_string
1
215
String
string
\\
216
Variable
dynamic_dispatch
216
Variable
identifier
216
arg
216
print_self
0
217
SELF_TYPE
self_dispatch
217
out_string
1
217
String
string
.
218
Expr
dynamic_dispatch
218
Expr
identifier
218
body
218
print_self
0
219
SELF_TYPE
identifier
219
self
method
223
beta
0
223
Expr
223
SELF_TYPE
identifier
223
self
method
225
apply
1
225
actual
225
Expr
225
Expr
226
Expr
dynamic_dispatch
226
Expr
identifier
226
body
226
substitute
2
226
Variable
identifier
226
arg
226
Expr
identifier
226
actual
method
230
substitute
2
230
x
230
Variable
230
e
230
Expr
230
Expr
231
Lambda
if
231
Bool
eq
231
Variable
identifier
231
x
231
Variable
identifier
231
arg
232
SELF_TYPE
identifier
232
self
234
Lambda
let
2
let_binding_init
234
new_body
234
Expr
234
Expr
dynamic_dispatch
234
Expr
identifier
234
body
234
substitute
2
234
Variable
identifier
234
x
234
Expr
identifier
234
e
let_binding_init
235
new_lam
235
Lambda
235
Lambda
new
235
Lambda
236
Lambda
dynamic_dispatch
236
Lambda
identifier
236
new_lam
236
init
2
236
Variable
identifier
236
arg
236
Expr
identifier
236
new_body
method
240
gen_code
2
240
env
240
VarList
240
closures
240
LambdaListRef
240
SELF_TYPE
241
SELF_TYPE
block
5
242
SELF_TYPE
self_dispatch
242
out_string
1
242
String
string
((new Closure
243
SELF_TYPE
self_dispatch
243
out_int
1
243
Int
dynamic_dispatch
243
LambdaListRef
identifier
243
closures
243
add
2
243
VarList
identifier
243
env
243
SELF_TYPE
identifier
243
self
244
SELF_TYPE
self_dispatch
244
out_string
1
244
String
string
).init(
245
SELF_TYPE
if
245
Bool
dynamic_dispatch
245
VarList
identifier
245
env
245
isNil
0
246
SELF_TYPE
self_dispatch
246
out_string
1
246
String
string
new Closure))
248
SELF_TYPE
self_dispatch
248
out_string
1
248
String
string
self))
249
SELF_TYPE
identifier
249
self
method
253
gen_closure_code
3
253
n
253
Int
253
env
253
VarList
254
closures
254
LambdaListRef
254
SELF_TYPE
255
SELF_TYPE
block
11
256
SELF_TYPE
self_dispatch
256
out_string
1
256
String
string
class Closure
257
SELF_TYPE
self_dispatch
257
out_int
1
257
Int
identifier
257
n
258
SELF_TYPE
self_dispatch
258
out_string
1
258
String
string
 inherits Closure {\n
259
SELF_TYPE
self_dispatch
259
out_string
1
259
String
string
  apply(y : EvalObject) : EvalObject {\n
260
SELF_TYPE
self_dispatch
260
out_string
1
260
String
string
    { out_string(\"Applying closure 
261
SELF_TYPE
self_dispatch
261
out_int
1
261
Int
identifier
261
n
262
SELF_TYPE
self_dispatch
262
out_string
1
262
String
string
\\n\");\n
263
SELF_TYPE
self_dispatch
263
out_string
1
263
String
string
      x <- y;\n
264
Expr
dynamic_dispatch
264
Expr
identifier
264
body
264
gen_code
2
264
VarList
dynamic_dispatch
264
VarList
identifier
264
env
264
add
1
264
Variable
identifier
264
arg
264
LambdaListRef
identifier
264
closures
265
SELF_TYPE
self_dispatch
265
out_string
1
265
String
string
;}};\n
266
SELF_TYPE
self_dispatch
266
out_string
1
266
String
string
};\n
274
App
inherits
274
Expr
7
attribute_no_init
275
fun
275
Expr
attribute_no_init
276
arg
276
Expr
method
278
init
2
278
f
278
Expr
278
a
278
Expr
278
App
279
SELF_TYPE
block
3
280
Expr
assign
280
fun
280
Expr
identifier
280
f
281
Expr
assign
281
arg
281
Expr
identifier
281
a
282
SELF_TYPE
identifier
282
self
method
286
print_self
0
286
SELF_TYPE
287
SELF_TYPE
block
6
288
SELF_TYPE
self_dispatch
288
out_string
1
288
String
string
((
289
Expr
dynamic_dispatch
289
Expr
identifier
289
fun
289
print_self
0
290
SELF_TYPE
self_dispatch
290
out_string
1
290
String
string
)@(
291
Expr
dynamic_dispatch
291
Expr
identifier
291
arg
291
print_self
0
292
SELF_TYPE
self_dispatch
292
out_string
1
292
String
string
))
293
SELF_TYPE
identifier
293
self
method
297
beta
0
297
Expr
298
Expr
case
298
Expr
identifier
298
fun
2
299
l
299
Lambda
299
Expr
dynamic_dispatch
299
Lambda
identifier
299
l
299
apply
1
299
Expr
identifier
299
arg
300
e
300
Expr
301
App
let
2
let_binding_init
301
new_fun
301
Expr
301
Expr
dynamic_dispatch
301
Expr
identifier
301
fun
301
beta
0
let_binding_init
302
new_app
302
App
302
App
new
302
App
303
App
dynamic_dispatch
303
App
identifier
303
new_app
303
init
2
303
Expr
identifier
303
new_fun
303
Expr
identifier
303
arg
method
307
substitute
2
307
x
307
Variable
307
e
307
Expr
307
Expr
308
App
let
3
let_binding_init
308
new_fun
308
Expr
308
Expr
dynamic_dispatch
308
Expr
identifier
308
fun
308
substitute
2
308
Variable
identifier
308
x
308
Expr
identifier
308
e
let_binding_init
309
new_arg
309
Expr
309
Expr
dynamic_dispatch
309
Expr
identifier
309
arg
309
substitute
2
309
Variable
identifier
309
x
309
Expr
identifier
309
e
let_binding_init
310
new_app
310
App
310
App
new
310
App
311
App
dynamic_dispatch
311
App
identifier
311
new_app
311
init
2
311
Expr
identifier
311
new_fun
311
Expr
identifier
311
new_arg
method
314
gen_code
2
314
env
314
VarList
314
closures
314
LambdaListRef
314
SELF_TYPE
315
SELF_TYPE
block
10
316
SELF_TYPE
self_dispatch
316
out_string
1
316
String
string
(let x : EvalObject <- 
317
Expr
dynamic_dispatch
317
Expr
identifier
317
fun
317
gen_code
2
317
VarList
identifier
317
env
317
LambdaListRef
identifier
317
closures
318
SELF_TYPE
self_dispatch
318
out_string
1
318
String
string
,\n
319
SELF_TYPE
self_dispatch
319
out_string
1
319
String
string
     y : EvalObject <- 
320
Expr
dynamic_dispatch
320
Expr
identifier
320
arg
320
gen_code
2
320
VarList
identifier
320
env
320
LambdaListRef
identifier
320
closures
321
SELF_TYPE
self_dispatch
321
out_string
1
321
String
string
 in\n
322
SELF_TYPE
self_dispatch
322
out_string
1
322
String
string
  case x of\n
323
SELF_TYPE
self_dispatch
323
out_string
1
323
String
string
    c : Closure => c.apply(y);\n
324
SELF_TYPE
self_dispatch
324
out_string
1
324
String
string
    o : Object => { abort(); new EvalObject; };\n
325
SELF_TYPE
self_dispatch
325
out_string
1
325
String
string
  esac)
335
Term
inherits
335
IO
6
method
339
var
1
339
x
339
String
339
Variable
340
Variable
let
1
let_binding_init
340
v
340
Variable
340
Variable
new
340
Variable
341
Variable
dynamic_dispatch
341
Variable
identifier
341
v
341
init
1
341
String
identifier
341
x
method
344
lam
2
344
x
344
Variable
344
e
344
Expr
344
Lambda
345
Lambda
let
1
let_binding_init
345
l
345
Lambda
345
Lambda
new
345
Lambda
346
Lambda
dynamic_dispatch
346
Lambda
identifier
346
l
346
init
2
346
Variable
identifier
346
x
346
Expr
identifier
346
e
method
349
app
2
349
e1
349
Expr
349
e2
349
Expr
349
App
350
App
let
1
let_binding_init
350
a
350
App
350
App
new
350
App
351
App
dynamic_dispatch
351
App
identifier
351
a
351
init
2
351
Expr
identifier
351
e1
351
Expr
identifier
351
e2
method
357
i
0
357
Expr
358
Lambda
let
1
let_binding_init
358
x
358
Variable
358
Variable
self_dispatch
358
var
1
358
String
string
x
359
Lambda
self_dispatch
359
lam
2
359
Variable
identifier
359
x
359
Variable
identifier
359
x
method
362
k
0
362
Expr
363
Lambda
let
2
let_binding_init
363
x
363
Variable
363
Variable
self_dispatch
363
var
1
363
String
string
x
let_binding_init
364
y
364
Variable
364
Variable
self_dispatch
364
var
1
364
String
string
y
365
Lambda
self_dispatch
365
lam
2
365
Variable
identifier
365
x
365
Lambda
self_dispatch
365
lam
2
365
Variable
identifier
365
y
365
Variable
identifier
365
x
method
368
s
0
368
Expr
369
Lambda
let
3
let_binding_init
369
x
369
Variable
369
Variable
self_dispatch
369
var
1
369
String
string
x
let_binding_init
370
y
370
Variable
370
Variable
self_dispatch
370
var
1
370
String
string
y
let_binding_init
371
z
371
Variable
371
Variable
self_dispatch
371
var
1
371
String
string
z
372
Lambda
self_dispatch
372
lam
2
372
Variable
identifier
372
x
372
Lambda
self_dispatch
372
lam
2
372
Variable
identifier
372
y
372
Lambda
self_dispatch
372
lam
2
372
Variable
identifier
372
z
372
App
self_dispatch
372
app
2
372
App
self_dispatch
372
app
2
372
Variable
identifier
372
x
372
Variable
identifier
372
z
372
App
self_dispatch
372
app
2
372
Variable
identifier
372
y
372
Variable
identifier
372
z
383
Main
inherits
383
Term
5
method
385
beta_reduce
1
385
e
385
Expr
385
Expr
386
Expr
block
3
387
SELF_TYPE
self_dispatch
387
out_string
1
387
String
string
beta-reduce: 
388
Expr
dynamic_dispatch
388
Expr
identifier
388
e
388
print_self
0
389
Expr
let
2
let_binding_init
389
done
389
Bool
389
Bool
false
let_binding_no_init
390
new_expr
390
Expr
391
Expr
block
3
392
Object
while
392
Bool
not
392
Bool
identifier
392
done
393
Object
block
2
394
Expr
assign
394
new_expr
394
Expr
dynamic_dispatch
394
Expr
identifier
394
e
394
beta
0
395
Object
if
395
Bool
eq
395
Expr
identifier
395
new_expr
395
Expr
identifier
395
e
396
Bool
assign
396
done
396
Bool
true
398
Expr
block
3
399
Expr
assign
399
e
399
Expr
identifier
399
new_expr
400
SELF_TYPE
self_dispatch
400
out_string
1
400
String
string
 =>\n
401
Expr
dynamic_dispatch
401
Expr
identifier
401
e
401
print_self
0
406
SELF_TYPE
self_dispatch
406
out_string
1
406
String
string
\n
407
Expr
identifier
407
e
method
412
eval_class
0
412
SELF_TYPE
413
SELF_TYPE
block
3
414
SELF_TYPE
self_dispatch
414
out_string
1
414
String
string
class EvalObject inherits IO {\n
415
SELF_TYPE
self_dispatch
415
out_string
1
415
String
string
  eval() : EvalObject { { abort(); self; } };\n
416
SELF_TYPE
self_dispatch
416
out_string
1
416
String
string
};\n
method
420
closure_class
0
420
SELF_TYPE
421
SELF_TYPE
block
8
422
SELF_TYPE
self_dispatch
422
out_string
1
422
String
string
class Closure inherits EvalObject {\n
423
SELF_TYPE
self_dispatch
423
out_string
1
423
String
string
  parent : Closure;\n
424
SELF_TYPE
self_dispatch
424
out_string
1
424
String
string
  x : EvalObject;\n
425
SELF_TYPE
self_dispatch
425
out_string
1
425
String
string
  get_parent() : Closure { parent };\n
426
SELF_TYPE
self_dispatch
426
out_string
1
426
String
string
  get_x() : EvalObject { x };\n
427
SELF_TYPE
self_dispatch
427
out_string
1
427
String
string
  init(p : Closure) : Closure {{ parent <- p; self; }};\n
428
SELF_TYPE
self_dispatch
428
out_string
1
428
String
string
  apply(y : EvalObject) : EvalObject { { abort(); self; } };\n
429
SELF_TYPE
self_dispatch
429
out_string
1
429
String
string
};\n
method
433
gen_code
1
433
e
433
Expr
433
SELF_TYPE
434
SELF_TYPE
let
1
let_binding_init
434
cl
434
LambdaListRef
434
LambdaListRef
dynamic_dispatch
434
LambdaListRef
new
434
LambdaListRef
434
reset
0
435
SELF_TYPE
block
12
436
SELF_TYPE
self_dispatch
436
out_string
1
436
String
string
Generating code for 
437
Expr
dynamic_dispatch
437
Expr
identifier
437
e
437
print_self
0
438
SELF_TYPE
self_dispatch
438
out_string
1
438
String
string
\n------------------cut here------------------\n
439
SELF_TYPE
self_dispatch
439
out_string
1
439
String
string
(*Generated by lam.cl (Jeff Foster, March 2000)*)\n
440
SELF_TYPE
self_dispatch
440
eval_class
0
441
SELF_TYPE
self_dispatch
441
closure_class
0
442
SELF_TYPE
self_dispatch
442
out_string
1
442
String
string
class Main {\n
443
SELF_TYPE
self_dispatch
443
out_string
1
443
String
string
  main() : EvalObject {\n
444
Expr
dynamic_dispatch
444
Expr
identifier
444
e
444
gen_code
2
444
VarList
new
444
VarList
444
LambdaListRef
identifier
444
cl
445
SELF_TYPE
self_dispatch
445
out_string
1
445
String
string
\n};\n};\n
446
Object
while
446
Bool
not
446
Bool
dynamic_dispatch
446
LambdaListRef
identifier
446
cl
446
isNil
0
447
Lambda
let
3
let_binding_init
447
e
447
VarList
447
VarList
dynamic_dispatch
447
LambdaListRef
identifier
447
cl
447
headE
0
let_binding_init
448
c
448
Lambda
448
Lambda
dynamic_dispatch
448
LambdaListRef
identifier
448
cl
448
headC
0
let_binding_init
449
n
449
Int
449
Int
dynamic_dispatch
449
LambdaListRef
identifier
449
cl
449
headN
0
450
Lambda
block
2
451
LambdaListRef
dynamic_dispatch
451
LambdaListRef
identifier
451
cl
451
removeHead
0
452
Lambda
dynamic_dispatch
452
Lambda
identifier
452
c
452
gen_closure_code
3
452
Int
identifier
452
n
452
VarList
identifier
452
e
452
LambdaListRef
identifier
452
cl
455
SELF_TYPE
self_dispatch
455
out_string
1
455
String
string
\n------------------cut here------------------\n
method
459
main
0
459
Int
460
Int
block
13
461
Expr
dynamic_dispatch
461
Expr
self_dispatch
461
i
0
461
print_self
0
462
SELF_TYPE
self_dispatch
462
out_string
1
462
String
string
\n
463
Expr
dynamic_dispatch
463
Expr
self_dispatch
463
k
0
463
print_self
0
464
SELF_TYPE
self_dispatch
464
out_string
1
464
String
string
\n
465
Expr
dynamic_dispatch
465
Expr
self_dispatch
465
s
0
465
print_self
0
466
SELF_TYPE
self_dispatch
466
out_string
1
466
String
string
\n
467
Expr
self_dispatch
467
beta_reduce
1
467
App
self_dispatch
467
app
2
467
App
self_dispatch
467
app
2
467
App
self_dispatch
467
app
2
467
Expr
self_dispatch
467
s
0
467
Expr
self_dispatch
467
k
0
467
Expr
self_dispatch
467
i
0
467
Expr
self_dispatch
467
i
0
468
Expr
self_dispatch
468
beta_reduce
1
468
App
self_dispatch
468
app
2
468
App
self_dispatch
468
app
2
468
Expr
self_dispatch
468
k
0
468
Expr
self_dispatch
468
i
0
468
Expr
self_dispatch
468
i
0
469
SELF_TYPE
self_dispatch
469
gen_code
1
469
App
self_dispatch
469
app
2
469
Expr
self_dispatch
469
i
0
469
Expr
self_dispatch
469
i
0
470
SELF_TYPE
self_dispatch
470
gen_code
1
470
App
self_dispatch
470
app
2
470
App
self_dispatch
470
app
2
470
App
self_dispatch
470
app
2
470
Expr
self_dispatch
470
s
0
470
Expr
self_dispatch
470
k
0
470
Expr
self_dispatch
470
i
0
470
Expr
self_dispatch
470
i
0
471
SELF_TYPE
self_dispatch
471
gen_code
1
471
App
self_dispatch
471
app
2
471
App
self_dispatch
471
app
2
471
App
self_dispatch
471
app
2
471
App
self_dispatch
471
app
2
471
App
self_dispatch
471
app
2
471
App
self_dispatch
471
app
2
471
App
self_dispatch
471
app
2
471
App
self_dispatch
471
app
2
471
Expr
self_dispatch
471
i
0
471
Expr
self_dispatch
471
k
0
471
Expr
self_dispatch
471
s
0
471
Expr
self_dispatch
471
s
0
472
Expr
self_dispatch
472
k
0
472
Expr
self_dispatch
472
s
0
472
Expr
self_dispatch
472
i
0
472
Expr
self_dispatch
472
k
0
472
Expr
self_dispatch
472
i
0
473
SELF_TYPE
self_dispatch
473
gen_code
1
473
App
self_dispatch
473
app
2
473
App
self_dispatch
473
app
2
473
Expr
self_dispatch
473
i
0
473
App
self_dispatch
473
app
2
473
Expr
self_dispatch
473
k
0
473
Expr
self_dispatch
473
s
0
473
App
self_dispatch
473
app
2
473
Expr
self_dispatch
473
k
0
473
App
self_dispatch
473
app
2
473
Expr
self_dispatch
473
s
0
473
Expr
self_dispatch
473
s
0
474
Int
integer
0
